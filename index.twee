:: StoryTitle
Journey template


:: StoryData
{
	"ifid": "C3A16691-C05E-47CA-B8E6-A1CC8300BED5",
	"format": "SugarCube",
	"format-version": "2.36.1",
	"start": "landing",
	"zoom": 0.6
}


:: Story Stylesheet [stylesheet]
@import url("https://fonts.googleapis.com/css2?family=Space+Grotesk:wght@300;400;600&display=swap");

/* GENERICS */
html {
  box-sizing: border-box;
  font-size: 62.5%; /* Mostly equivalates to 10px but allows users accessibility zoom settings to work*/
  /* font-size: 10px; */
  scroll-behavior: smooth;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

html,
body {
  min-height: 100vh;
}

body {
  font-size: 10px;
  margin: 0;
}

*,
*::before,
*::after {
  box-sizing: inherit;
}

/* Try to keep your margins going in one direction to avoid margin collapase or grounding. I switch all the top margins off to avoid this issue. */
h1,
h2,
h3,
h4,
h5,
h6,
ul,
ol,
li,
dl,
dt,
dd,
blockquote,
address,
article,
aside,
details,
dialogue,
fieldset,
figcaption,
figure,
footer,
form,
header,
hr,
main,
nav,
pre,
section,
table,
p {
  margin-top: 0;
  margin-block-start: 0;
}

a {
  color: inherit;
  text-decoration: none;
  /* You MUST make sure that links stand out from nomal text though...*/
}


img {
  /* This means that it can be less than 100% of the width of its parent IF the image is INTRINSICALLY smaller */
  max-width: 100%;

  height: auto;
  /* 'auto' is the initial value for height BUT for images (and other elements which have an intrinic height) that is not the case. To make an image responsive you set one dimension (usually width) to [max-]width: 100%; and the other to 'auto' to ensure it keeps aspect ratio. 'auto' basically tells the browser to decide. */
  vertical-align: middle;
  /* minor vertical centering. Works for images IF there is a baseline (i.e. they are displayed inline or inline-block) */
}

/* Because we us <ul>s for lists that we don't always want bulletted. */
ul {
  list-style: none;
  padding-left: 0;
}

/* To make actual bulletted lists */
ul.typographic {
  list-style: initial;
  padding-inline-start: 20px;
}

/* stops icons being the target of JS click events */
a.btn *,
button * {
  pointer-events: null;
}

/* For 'accessibility text'. If your button only has an image inside it that isn't good for accessibility. Put a span inside there and give it this class and put some descriptive text for what the button does into the span. */

.sr-only {
  border: 0;
  clip: rect(0 0 0 0);
  clip-path: polygon(0px 0px, 0px 0px, 0px 0px);
  -webkit-clip-path: polygon(0px 0px, 0px 0px, 0px 0px);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap;
}
.sr-only-focusable:active,
.sr-only-focusable:focus {
  position: static;
  width: auto;
  height: auto;
  overflow: visible;
  clip: auto;
  clip-path: auto;
  -webkit-clip-path: auto;
  white-space: normal;
}

/* GET RID OF TWINE STYLES */
#story{
  margin:0
}

#passages {
	max-width: 100%;

}

#story a.link-external:after {
	content: "";
}

button{
    background-color: transparent;
    border: #fff 1px solid;
    border-radius: 3px;
}

button:hover{
	background-color:#cf1b98;
	border: #fff 1px solid;
	color: #fff;
}

a {
  color: #f2647d;
}

a:active {
  background-color: #f2647d;
}

a:hover {
  color: #fff;
}

#story a.link-external:after {
	content: "";
}

#story {
	margin: 0
}

/* GENERAL STYLES */
body{
  font-size: 1.6rem;
  font-family: "Space Grotesk";
  overflow:scroll;
  background:#000;
  /* padding: 1.5rem */
  display:flex;
  flex-direction: column
}

header{
  display:flex;
  justify-content: flex-end;
  align-items: center;
    padding: 2rem
}

main{
   padding: 2rem;
   margin-block-end: 4rem
}

footer{
   display:flex;
  justify-content: space-between;
  align-items: flex-end; 
  position:fixed;
  bottom: 0;
  padding: 2rem;
  width: 100%;
  background-color: #000
}

nav{
  display:flex;
    justify-content: space-between;
}

.nav-wrapper{
display:flex;
  flex-direction:column;
align-items: flex-start
}

.nav-wrapper:last-child{
align-items: flex-end
}

.nav-item{
  margin-block-end: 1.5rem
}

.nav-item:last-child{
  margin-block-end: 0
}


.nav-wrapper:last-child{
display:flex;
align-items: flex-end
}

.menu-wrapper{
  display: flex;
    justify-content: center;
    align-items: center;
    flex-wrap: wrap;
}

.menu-wrapper > button{
margin-inline-end: 10px;
margin-block-end: 10px
}

.door-container{
  display:flex;
  flex-direction: row;
justify-content: space-around;
  align-items:center;
  text-align: right;
}

.door-item{
  display:flex;
  flex-direction:column
}

.door-item > button > img {
  max-width: 7rem
}

.door-item > span {
  text-align: center
}

textarea{
  min-width: 60vw
}

.wordcontainer{
  display:flex;
  flex-direction: row;
}

.letter-item > input[type=text]{
    min-width: 2em;
  	max-width: 2em;
  	margin-inline-end:10px;
}

.letter-item > .correct-letter{
  min-width: 2em;
  	max-width: 2em;
  	margin-inline-end:10px;
}

.words{
  display:flex;
  flex-direction: row;
}

.word{
  padding: 5px;
}

.detector{
 width: 50%;
}

.spinning{

  animation-name: spin;
  animation-duration: 2000ms;
  animation-iteration-count: infinite;
  animation-timing-function: linear; 
  /* transform: rotate(3deg); */
   /* transform: rotate(0.3rad);/ */
   /* transform: rotate(3grad); */ 
   /* transform: rotate(.03turn);  */
}

@keyframes spin {
    from {
        transform:rotate(0deg);
    }
    to {
        transform:rotate(360deg);
    }
}


/* MAP */
	.map{
width: 100%;
    height: 60vh;
    border: 0;
    margin: auto;
    }


.directions-card {
    display: none!important
}

@media screen and (min-width: 450px) {
.map{
	max-width:60vw;
	height:50vh;
	border:0
}
}


:: Story JavaScript [script]
$('#ui-bar').remove();
$(document.head).find('#style-ui-bar').remove();
// TYPEWRITER FN
!function() {
    postrender.typewriter = function (b) {
        if (this.tags) {
            var r = new RegExp("t8n.typewriter.([0-9]+)(?:[^0-9]|$)","g");
            var t = r.exec(this.tags.toString());
            if (t) {
                typeout(b, t[1]+0);
            }
        }
        return b;
    };
    var typeout = function(c,t) {
        var Furl = function(current) {
            this.n = current;
            this.out = false;
            this.data = current.nodeValue;
            current.nodeValue = "";
            this.kids = [];
            var cn = current.childNodes;
            if (current.style && current.style.display=="none") {
                return;
            }
            while (cn.length>0) {
                var f = new Furl(cn[0]);
                current.removeChild(cn[0]);
                f.out = true;this.kids.push(f);
            }
        };
        var nodes = new Furl(c);
        var unfurl = function(furled,d) {
            var n = furled.n;
            if (furled.out) {
                d.appendChild(n);
                furled.out = false;
            }
            if (furled.data) {
                n.nodeValue += furled.data[0];
                furled.data = furled.data.slice(1);
                return true;
            }
            for (var j=0; j<furled.kids.length; j++) {
                var ret = unfurl(furled.kids[j],n);
                if (ret) {
                    return true;
                }
            }
            return false;
        };
        var title = passage();
        var intr = setInterval (
            function() {
                if (passage() == title && unfurl(nodes,null)) {
                    return;
                }
                clearInterval(intr);
            }
        ,t);
    };
}();

// MAKE MAP FUNCTION

setup.generateDirectionsMap = function (latorg, longorg, latdest, longdest){
const iFrame = document.createElement("iframe")
iFrame.classList.add("map")
iFrame.setAttribute("loading", "lazy")
iFrame.setAttribute("referrerpolicy", "no-referrer-when-downgrade")
// iFrame.setAttribute("allowfullscreen")
iFrame.setAttribute("src", `https://www.google.com/maps/embed/v1/directions?key=AIzaSyBDRwRTMpSybNcmgkYVX1yZ0YmBbNhs9qU&center=${latorg},${longorg}&zoom=17&origin=${latorg},${longorg}&destination=${latdest},${longdest}&mode=walking`)
const mount = document.getElementById("mapMount")
return iFrame
}

//Get random 5 letter word

setup.generate5LetterCode = () => {
const alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
let word = ""
for (let i =0 ; i < 5 ; i++){
word += alphabet[Math.round((alphabet.length-1)*Math.random())];
}
  return word;
}

//Check if an array contains multiple instances of an element

setup.checkForRepeats = (array,element) => {
 const arrayCopy = [...array];
 const duplicates = arrayCopy.filter((item, index) => index !== arrayCopy.indexOf(item));
 return duplicates.contains(element)
}


:: StoryInit {"position":"100,100","size":"100,100"}
<<cacheaudio "badjoke" "https://youhavefoundconey.net/CG/what/assets/audio/badjoke.mp3">>
<<waitforaudio>>


:: header {"position":"100,225","size":"100,100"}
<header>Adventure Functionality /
 Structure Template</header>


:: footer {"position":"100,375","size":"100,100"}
<footer><div class="nav-wrapper "><div class="nav-item"><<button "Replay">><<goto $passage>><</button>> </div><div class="nav-item"><<button "Back">><<goto $prevpass>><</button>></div></div><div class="nav-wrapper"><div class="nav-item"><<button "I'm lost">><<goto "lost">><</button>></div></div></footer>


:: lost {"position":"700,50","size":"100,100"}
<<set $passage to "lost">><<include "header">>
<main>
Sorry to hear that you're lost! 
You have two options:

<<button "Begin the adventure again">><<goto "landing">><</button>>

<<button "Take me straight to the end location!">><<goto "end">><</button>>
</main>
<<include "footer">>


:: landing {"position":"700,175","size":"100,100"}
<<set $passage to "landing">>
<<set $currentLocation to "Liverpool Central">>
<main>

We start this journey at Liverpool Central. 
When you're ready, click the button to go to the next location.

<div class="nav-wrapper">
<<button "I'm ready to start">><<goto "walk">><</button>>
</div>

</main>


:: end {"position":"97,615","size":"100,100"}
<main>

End

</main>


:: footer2 {"position":"99,493","size":"100,100"}
<footer>
<div class="nav-item back"><<button "<">><<goto $prevpass>><</button>></div>
<div class="nav-item"><<button "Replay">><<goto $passage>><</button>> </div>
<div class="nav-item"><<button "Take me to the end">><<goto "lost">><</button>></div>
<div class="nav-item forward"><<button ">">><<set $prevpass to $passage>><<goto $nextpassage>><</button>></div>
</footer>


:: walk {"position":"700,300","size":"100,100"}
<<set $passage to "walk">>
<<set $myMap = setup.generateDirectionsMap(53.40475638418438, -2.980092838167595,53.4086936905494, -2.9798216352858717)>>
<main>

Please make your way to St. George's Hall. Please be careful and pay full attention while crossing any roads.

$myMap
<div class = "nav-wrapper">
<<button "I'm at St. George's Hall">>
	<<goto "360">>
<</button>>
<<button "Go back a step">>
	<<goto "landing">>
<</button>>
</div>
<main>
</main>


:: 360 {"position":"700,425","size":"100,100"}
<<set $passage to "360">>
<<set $currentLocation to "St George's Hall">>
<main>

<iframe width="90%" height="500px" allowFullScreen="true" allow="accelerometer; magnetometer; gyroscope" style="display:block; margin:20px auto; border:0 none; max-width:880px;border-radius:8px; box-shadow: 0 1px 1px rgba(0,0,0,0.11),0 2px 2px rgba(0,0,0,0.11),0 4px 4px rgba(0,0,0,0.11),0 6px 8px rgba(0,0,0,0.11),0 8px 16px rgba(0,0,0,0.11);" src="https://panoraven.com/en/embed/TqgxUobFov"></iframe>

Please tap the arrow symbols (in the bottom right corner) to toggle fullscreen mode

<div class="nav-wrapper">
<<button "I'm ready to move on">>
	<<goto "walk2">>
<</button>>
<<button "Go back">>
	<<goto "walk">>
<</button>>
</div>
</main>


:: walk2 {"position":"700,550","size":"100,100"}
<<set $passage to "walk">>
<<set $myMap = setup.generateDirectionsMap(53.4086936905494, -2.9798216352858717,53.408968411859796, -2.978284601304633)>>
<main>

Please make your way to The Empire Theatre. Please be careful and pay full attention while crossing any roads.

$myMap
<div class = "nav-wrapper">
<<button "I'm at The Empire Theatre">>
	<<goto "empire360">>
<</button>>
<<button "Go back a step">>
	<<goto "360">>
<</button>>
</div>
<main>
</main>


:: last {"position":"700,950","size":"100,100"}
<<set $passage to "last">>
<main>
<div class = "nav-wrapper">

This link would take them to the twine app for this location

<<button "Start again">>
	<<goto "landing">>
<</button>>
</div>
</main>


:: empire360 {"position":"700,675","size":"100,100"}
<<set $passage to "empre360">>
<<set $currentLocation to "Liverpool Empire">>
<main>

<iframe width="90%" height="500px" allowFullScreen="true" allow="accelerometer; magnetometer; gyroscope" style="display:block; margin:20px auto; border:0 none; max-width:880px;border-radius:8px; box-shadow: 0 1px 1px rgba(0,0,0,0.11),0 2px 2px rgba(0,0,0,0.11),0 4px 4px rgba(0,0,0,0.11),0 6px 8px rgba(0,0,0,0.11),0 8px 16px rgba(0,0,0,0.11);" src="https://panoraven.com/en/embed/NybJJZB32l"></iframe>

Please tap the arrow symbols (in the bottom right corner) to toggle fullscreen mode

<div class="nav-wrapper">
<<button "I'm ready to move on">>
	<<goto "nextjourney">>
<</button>>
<<button "Go back">>
	<<goto "walk2">>
<</button>>
</div>
</main>


:: nextjourney {"position":"700,825","size":"100,100"}
<<set $passage to "nextjourney">>
<main>
That's the end of this journey, thank you for joining us.
You are currently at $currentLocation.  There are other journeys nearby - which would you like to go to?
  
  <div class="nav-wrapper">
  <<button "SPIRITS OF CONCRETE AND IRON">>
    <<set $destination to "St. George's Hall">>
    <<goto "maptolocation">>
  <</button>>
    This starts at St. George's Hall
    
  <<button "OUR BIGGEST PREMIERE YET">>
     <<set $destination to "Liverpool Empire">>
    <<goto "maptolocation">>
  <</button>>
  This starts at Liverpool Empire
  </div>
  
</main>


:: maptolocation {"position":"825,825","size":"100,100"}
<<set $passage to "maptolocation">>
<<nobr>>
<<set $locations to [["St. George's Hall",53.40811025940036, -2.980446286501197],
["Liverpool Empire",53.40900038910033, -2.978338245481878], ["Liverpool Central Station",53.40473612530249, -2.979955657127461]]>>

<<for _i to 0; _i lt $locations.length; _i++>>
<<script>>console.log("here")<</script>>
	<<if $locations[_i][0] is $currentLocation>>
    	<<set $currentlat to $locations[_i][1]>>
        <<set $currentlong to $locations[_i][2]>>
    <</if>>
    <<if $locations[_i][0] is $destination>>
    	<<set $destinationlat to $locations[_i][1]>>
        <<set $destinationlong to $locations[_i][2]>>
    <</if>>
<</for>>

<<set $myMap = setup.generateDirectionsMap($currentlat, $currentlong, $destinationlat, $destinationlong)>>
<</nobr>>
<main>

<<if $currentLocation is $destination>>
You are already at $destination, so we can start your journey now

<<button "Let's get started">>
	<<goto "last">>
<</button>>
<<else>>

This journey starts at $destination, please make your way there.
Please be careful and pay full attention while crossing any roads.
$myMap
Are you at $destination?
<<button "Yes">>
	<<goto "last">>
    <<set $currentLocation to $destination>>
<</button>>
<</if>>

<<button "Go back a step">>
	<<goto "nextjourney">>
<</button>>

</main>


